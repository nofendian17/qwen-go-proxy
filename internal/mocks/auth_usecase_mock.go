// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecases/auth/auth.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecases/auth/auth.go -destination=internal/mocks/auth_usecase_mock.go -package=mocks AuthUseCaseInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "qwen-go-proxy/internal/domain/entities"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthUseCaseInterface is a mock of AuthUseCaseInterface interface.
type MockAuthUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthUseCaseInterfaceMockRecorder
	isgomock struct{}
}

// MockAuthUseCaseInterfaceMockRecorder is the mock recorder for MockAuthUseCaseInterface.
type MockAuthUseCaseInterfaceMockRecorder struct {
	mock *MockAuthUseCaseInterface
}

// NewMockAuthUseCaseInterface creates a new mock instance.
func NewMockAuthUseCaseInterface(ctrl *gomock.Controller) *MockAuthUseCaseInterface {
	mock := &MockAuthUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockAuthUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthUseCaseInterface) EXPECT() *MockAuthUseCaseInterfaceMockRecorder {
	return m.recorder
}

// AuthenticateManually mocks base method.
func (m *MockAuthUseCaseInterface) AuthenticateManually() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticateManually")
	ret0, _ := ret[0].(error)
	return ret0
}

// AuthenticateManually indicates an expected call of AuthenticateManually.
func (mr *MockAuthUseCaseInterfaceMockRecorder) AuthenticateManually() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticateManually", reflect.TypeOf((*MockAuthUseCaseInterface)(nil).AuthenticateManually))
}

// CheckAuthentication mocks base method.
func (m *MockAuthUseCaseInterface) CheckAuthentication() (*entities.Credentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAuthentication")
	ret0, _ := ret[0].(*entities.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckAuthentication indicates an expected call of CheckAuthentication.
func (mr *MockAuthUseCaseInterfaceMockRecorder) CheckAuthentication() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAuthentication", reflect.TypeOf((*MockAuthUseCaseInterface)(nil).CheckAuthentication))
}

// EnsureAuthenticated mocks base method.
func (m *MockAuthUseCaseInterface) EnsureAuthenticated() (*entities.Credentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureAuthenticated")
	ret0, _ := ret[0].(*entities.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureAuthenticated indicates an expected call of EnsureAuthenticated.
func (mr *MockAuthUseCaseInterfaceMockRecorder) EnsureAuthenticated() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureAuthenticated", reflect.TypeOf((*MockAuthUseCaseInterface)(nil).EnsureAuthenticated))
}
