name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test ./...

      - name: Validate tag format
        id: tag-validation
        run: |
          # Extract version from Git tag
          VERSION="${GITHUB_REF#refs/tags/v}"

          echo "Validating tag format..."
          echo "Raw tag: ${GITHUB_REF}"
          echo "Extracted version: ${VERSION}"
          echo "Repository: ${{ github.repository }}"

          # Validate version format (semantic versioning)
          if [[ ! "${VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?(\+[a-zA-Z0-9.-]+)?$ ]]; then
            echo "Error: Invalid version format: ${VERSION}"
            echo "Expected format: x.y.z or x.y.z-prerelease or x.y.z+build"
            exit 1
          fi

          # Check if this is a pre-release
          if [[ "${VERSION}" =~ (alpha|beta|rc|pre|preview) ]]; then
            echo "Pre-release detected: ${VERSION}"
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "Stable release: ${VERSION}"
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "image_name=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}

      - name: Publish Docker images
        if: success()
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/qwen-go-proxy:v${{ steps.tag-validation.outputs.version }}
          docker push ghcr.io/${{ github.repository_owner }}/qwen-go-proxy:latest
